{"ast":null,"code":"var _jsxFileName = \"/home/freilinjb/Escritorio/MEARNTasks/proyecto/src/context/proyectos/ProyectoState.jsx\";\nimport React, { useReducer } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport proyectoContext from './proyectoContext';\nimport proyectoReducer from './proyectoReducer';\nimport { FORMULARIO_PROYECTO, OBTENER_PROYECTOS, AGRERGAR_PROYECTO, VALIDAR_FORMULARIO, PROYECTO_ACTUAL, ELIMINAR_PROYECTO } from '../../types'; //Para cambiar el state del form para habilitar el formulario\n\nconst ProyectoState = props => {\n  const proyectos = [{\n    id: 1,\n    nombre: 'Tienda Virtual'\n  }, {\n    id: 2,\n    nombre: 'Intrannet'\n  }, {\n    id: 3,\n    nombre: 'Diesno de Sitios Web'\n  }, {\n    id: 4,\n    nombre: 'MEARN'\n  }];\n  const initialState = {\n    proyectos: [],\n    formulario: false,\n    errorformulario: false,\n    proyecto: null\n  }; //Dispatch para ejecutar las acciones.\n  //useReducer es el remplazo de redux\n  //dispath va a ejecutar los diferentestes type para ejecutarlo en el proyectoReducer\n\n  const [state, dispatch] = useReducer(proyectoReducer, initialState); //Serie de funciones para el CRUD del proyecto\n\n  const mostrarFormulario = () => {\n    dispatch({\n      type: FORMULARIO_PROYECTO\n    });\n  }; //Obtener los proyectos\n\n\n  const obtenerProyectos = () => {\n    dispatch({\n      type: OBTENER_PROYECTOS,\n      payload: proyectos //El payload siempre es lo que toma de parametro \n\n    });\n  }; //Agregar nuevo proyecto\n\n\n  const agrergarProyecto = proyecto => {\n    proyecto.id = uuidv4(); //Insertar el proyecto en el state\n\n    dispatch({\n      type: AGRERGAR_PROYECTO,\n      payload: proyecto\n    });\n  }; //Validar el formulario por errores\n\n\n  const mostrarError = () => {\n    dispatch({\n      type: VALIDAR_FORMULARIO\n    });\n  }; //Selecciona el proyecto que el suario dio click\n\n\n  const proyectoActual = proyectoId => {\n    dispatch({\n      type: PROYECTO_ACTUAL,\n      payload: proyectoId\n    });\n  }; //Elimina un proyecto\n\n\n  const eliminarProyecto = proyectoId => {\n    dispatch({\n      type: ELIMINAR_PROYECTO,\n      payload: proyectoId\n    });\n  }; //Creamos el provider para importarlo en el APP\n\n\n  return /*#__PURE__*/React.createElement(proyectoContext.Provider, {\n    value: {\n      proyectos: state.proyectos,\n      formulario: state.formulario,\n      errorformulario: state.errorformulario,\n      proyecto: state.proyecto,\n      mostrarFormulario,\n      obtenerProyectos,\n      agrergarProyecto,\n      mostrarError,\n      proyectoActual,\n      eliminarProyecto\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }\n  }, props.children);\n};\n\nexport default ProyectoState;","map":{"version":3,"sources":["/home/freilinjb/Escritorio/MEARNTasks/proyecto/src/context/proyectos/ProyectoState.jsx"],"names":["React","useReducer","v4","uuidv4","proyectoContext","proyectoReducer","FORMULARIO_PROYECTO","OBTENER_PROYECTOS","AGRERGAR_PROYECTO","VALIDAR_FORMULARIO","PROYECTO_ACTUAL","ELIMINAR_PROYECTO","ProyectoState","props","proyectos","id","nombre","initialState","formulario","errorformulario","proyecto","state","dispatch","mostrarFormulario","type","obtenerProyectos","payload","agrergarProyecto","mostrarError","proyectoActual","proyectoId","eliminarProyecto","children"],"mappings":"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","sourcesContent":["import React,{ useReducer} from 'react';\nimport { v4 as uuidv4} from 'uuid';\n\nimport proyectoContext from './proyectoContext';\nimport proyectoReducer from './proyectoReducer';\nimport { FORMULARIO_PROYECTO, \n    OBTENER_PROYECTOS, \n    AGRERGAR_PROYECTO,\n    VALIDAR_FORMULARIO,\n    PROYECTO_ACTUAL,\n    ELIMINAR_PROYECTO } from '../../types';\n\n//Para cambiar el state del form para habilitar el formulario\nconst ProyectoState = props => {\n\n    const proyectos = [\n        {id: 1,nombre: 'Tienda Virtual'},\n        {id: 2,nombre: 'Intrannet'},\n        {id: 3,nombre: 'Diesno de Sitios Web'},\n        {id: 4,nombre: 'MEARN'}\n    ]    \n\n    const initialState = {\n        proyectos : [],\n        formulario : false,\n        errorformulario: false,\n        proyecto: null\n    }\n\n    //Dispatch para ejecutar las acciones.\n    //useReducer es el remplazo de redux\n\n    //dispath va a ejecutar los diferentestes type para ejecutarlo en el proyectoReducer\n    const [state, dispatch] = useReducer(proyectoReducer, initialState);\n\n    //Serie de funciones para el CRUD del proyecto\n    const mostrarFormulario = () => {\n        dispatch({\n            type: FORMULARIO_PROYECTO\n        });\n    }\n\n    //Obtener los proyectos\n    const obtenerProyectos = () => {\n        dispatch({\n            type: OBTENER_PROYECTOS,\n            payload: proyectos\n            //El payload siempre es lo que toma de parametro \n        });\n    }\n\n\n    //Agregar nuevo proyecto\n    const agrergarProyecto = proyecto => {\n        proyecto.id = uuidv4();\n\n        //Insertar el proyecto en el state\n        dispatch({\n            type: AGRERGAR_PROYECTO,\n            payload: proyecto\n        });\n    }\n\n    //Validar el formulario por errores\n    const mostrarError = () => {\n        dispatch({\n            type: VALIDAR_FORMULARIO\n        })\n    }\n\n    //Selecciona el proyecto que el suario dio click\n    const proyectoActual = proyectoId => {\n        dispatch({\n            type: PROYECTO_ACTUAL,\n            payload: proyectoId\n        })\n    }\n\n    //Elimina un proyecto\n    const eliminarProyecto = proyectoId => {\n        dispatch({\n            type: ELIMINAR_PROYECTO,\n            payload: proyectoId\n        });\n    }\n\n    //Creamos el provider para importarlo en el APP\n    return (\n        <proyectoContext.Provider \n            value={{\n                proyectos: state.proyectos,\n                formulario: state.formulario,\n                errorformulario: state.errorformulario, \n                proyecto: state.proyecto,\n                mostrarFormulario,\n                obtenerProyectos,\n                agrergarProyecto,\n                mostrarError,\n                proyectoActual,\n                eliminarProyecto\n            }}\n        >\n            {props.children}\n        </proyectoContext.Provider>\n    )\n} \n\nexport default ProyectoState;"]},"metadata":{},"sourceType":"module"}