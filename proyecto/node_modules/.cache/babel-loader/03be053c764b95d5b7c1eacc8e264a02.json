{"ast":null,"code":"var _jsxFileName = \"/home/freilinjb/Escritorio/MEARNTasks/proyecto/src/context/tareas/tareaState.jsx\";\nimport React, { useReducer } from 'react';\nimport TareaContext from './tareaContext';\nimport TareaReducer from './tareaReducer';\nimport { TAREAS_PROYECTO, AGERGAR_TAREAS, VALIDAR_TAREA, ELIMINAR_TAREA, ESTADO_TAREA, TAREA_ACTUAL, ACTUALIZAR_TAREA, LIMPIAR_TAREA } from '../../types';\n\nconst TareaState = props => {\n  const initialState = {\n    tareas: [{\n      id: 1,\n      nombre: 'Elegir Plamaforma',\n      estado: true,\n      proyectoId: 1\n    }, {\n      id: 2,\n      nombre: 'Elegir Colores',\n      estado: false,\n      proyectoId: 2\n    }, {\n      id: 3,\n      nombre: 'Elegir Plataformas de pago',\n      estado: false,\n      proyectoId: 3\n    }, {\n      id: 4,\n      nombre: 'Elegir Hosting',\n      estado: true,\n      proyectoId: 4\n    }, {\n      id: 5,\n      nombre: 'Elegir Plamaforma',\n      estado: true,\n      proyectoId: 3\n    }, {\n      id: 6,\n      nombre: 'Elegir Colores',\n      estado: false,\n      proyectoId: 2\n    }, {\n      id: 7,\n      nombre: 'Elegir Plataformas de pago',\n      estado: false,\n      proyectoId: 4\n    }, {\n      id: 8,\n      nombre: 'Elegir Hosting',\n      estado: true,\n      proyectoId: 2\n    }, {\n      id: 9,\n      nombre: 'Elegir Plamaforma',\n      estado: true,\n      proyectoId: 4\n    }, {\n      id: 10,\n      nombre: 'Elegir Colores',\n      estado: false,\n      proyectoId: 2\n    }, {\n      id: 11,\n      nombre: 'Elegir Plataformas de pago',\n      estado: false,\n      proyectoId: 1\n    }, {\n      id: 12,\n      nombre: 'Elegir Hosting',\n      estado: true,\n      proyectoId: 3\n    }],\n    tareasproyecto: null,\n    //para cuando el usuario seleccione una tarea\n    errortarea: false,\n    tareaseleccionada: null\n  }; //crear dispath y state\n\n  const [state, dispatch] = useReducer(TareaReducer, initialState); //Crear las funciones\n  //Obtener las tareas de un proyecto\n\n  const obtenerTareas = proyectoId => {\n    dispatch({\n      type: TAREAS_PROYECTO,\n      payload: proyectoId\n    });\n  }; //Agregar una tarea al proyecto seleccionado\n\n\n  const agrergarTarea = tarea => {\n    dispatch({\n      type: AGERGAR_TAREAS,\n      payload: tarea\n    });\n  }; //validar y mostrar un error en caso de que sea necesario\n\n\n  const validarTarea = () => {\n    dispatch({\n      type: VALIDAR_TAREA\n    });\n  };\n\n  const eliminarTarea = id => {\n    dispatch({\n      type: ELIMINAR_TAREA,\n      payload: id\n    });\n  }; //Cambia el estado de cada tarea\n\n\n  const cambiarEstadoTarea = tarea => {\n    dispatch({\n      type: ESTADO_TAREA,\n      payload: tarea\n    });\n  }; //Extrae una tarea para edicion\n\n\n  const guardarTareaActual = tarea => {\n    dispatch({\n      type: TAREA_ACTUAL,\n      payload: tarea\n    });\n  }; //Editar o modifica una tarea\n\n\n  const actualizarTarea = tarea => {\n    dispatch({\n      type: ACTUALIZAR_TAREA,\n      payload: tarea\n    });\n  }; //Elimina la tarea seleccionada\n\n\n  const limpiarTarea = () => {\n    dispatch({\n      type: LIMPIAR_TAREA\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(TareaContext.Provider, {\n    value: {\n      tareas: state.tareas,\n      tareasproyecto: state.tareasproyecto,\n      errortarea: state.errortarea,\n      tareaseleccionada: state.tareaseleccionada,\n      obtenerTareas,\n      agrergarTarea,\n      validarTarea,\n      eliminarTarea,\n      cambiarEstadoTarea,\n      guardarTareaActual,\n      actualizarTarea\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }\n  }, props.children);\n};\n\nexport default TareaState;","map":{"version":3,"sources":["/home/freilinjb/Escritorio/MEARNTasks/proyecto/src/context/tareas/tareaState.jsx"],"names":["React","useReducer","TareaContext","TareaReducer","TAREAS_PROYECTO","AGERGAR_TAREAS","VALIDAR_TAREA","ELIMINAR_TAREA","ESTADO_TAREA","TAREA_ACTUAL","ACTUALIZAR_TAREA","LIMPIAR_TAREA","TareaState","props","initialState","tareas","id","nombre","estado","proyectoId","tareasproyecto","errortarea","tareaseleccionada","state","dispatch","obtenerTareas","type","payload","agrergarTarea","tarea","validarTarea","eliminarTarea","cambiarEstadoTarea","guardarTareaActual","actualizarTarea","limpiarTarea","children"],"mappings":"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","sourcesContent":["import React, {useReducer} from 'react';\nimport TareaContext from './tareaContext'\nimport TareaReducer from './tareaReducer';\n\nimport {\n    TAREAS_PROYECTO, \n    AGERGAR_TAREAS,\n    VALIDAR_TAREA,\n    ELIMINAR_TAREA,\n    ESTADO_TAREA,\n    TAREA_ACTUAL,\n    ACTUALIZAR_TAREA,\n    LIMPIAR_TAREA\n} from '../../types';\n\nconst TareaState = props => {\n    const initialState = {\n        tareas: [\n            {id: 1, nombre: 'Elegir Plamaforma', estado: true, proyectoId: 1},\n            {id: 2, nombre: 'Elegir Colores', estado: false, proyectoId: 2},\n            {id: 3, nombre: 'Elegir Plataformas de pago', estado: false, proyectoId: 3},\n            {id: 4, nombre: 'Elegir Hosting', estado: true, proyectoId: 4},\n            {id: 5, nombre: 'Elegir Plamaforma', estado: true, proyectoId: 3},\n            {id: 6, nombre: 'Elegir Colores', estado: false, proyectoId: 2},\n            {id: 7, nombre: 'Elegir Plataformas de pago', estado: false, proyectoId: 4},\n            {id: 8, nombre: 'Elegir Hosting', estado: true, proyectoId: 2},\n            {id: 9, nombre: 'Elegir Plamaforma', estado: true, proyectoId: 4},\n            {id: 10, nombre: 'Elegir Colores', estado: false, proyectoId: 2},\n            {id: 11, nombre: 'Elegir Plataformas de pago', estado: false, proyectoId: 1},\n            {id: 12, nombre: 'Elegir Hosting', estado: true, proyectoId: 3}\n        ],\n        tareasproyecto: null, //para cuando el usuario seleccione una tarea\n        errortarea: false,\n        tareaseleccionada: null\n    }\n\n    //crear dispath y state\n    const [state, dispatch] = useReducer(TareaReducer, initialState);\n\n    //Crear las funciones\n\n    //Obtener las tareas de un proyecto\n    const obtenerTareas = proyectoId => {\n        dispatch({\n            type: TAREAS_PROYECTO,\n            payload: proyectoId\n        });\n    }\n\n    //Agregar una tarea al proyecto seleccionado\n    const agrergarTarea = tarea => {\n        dispatch({\n            type:AGERGAR_TAREAS,\n            payload: tarea\n        });\n    }\n\n    //validar y mostrar un error en caso de que sea necesario\n    const validarTarea = () => {\n        dispatch({\n            type:VALIDAR_TAREA\n        });\n    }\n\n    const eliminarTarea = id => {\n        dispatch({\n            type: ELIMINAR_TAREA,\n            payload: id\n        });\n    }\n\n    //Cambia el estado de cada tarea\n    const cambiarEstadoTarea = tarea => {\n        dispatch({\n            type: ESTADO_TAREA,\n            payload: tarea\n        }); \n    }\n\n    //Extrae una tarea para edicion\n    const guardarTareaActual = tarea => {\n        dispatch({\n            type: TAREA_ACTUAL,\n            payload: tarea\n        });\n    }\n\n    //Editar o modifica una tarea\n    const actualizarTarea = tarea => {\n        dispatch({\n            type: ACTUALIZAR_TAREA,\n            payload: tarea\n        });\n    }\n\n    //Elimina la tarea seleccionada\n    const limpiarTarea=() => {\n        dispatch({\n            type: LIMPIAR_TAREA\n        })\n    }\n\n    return (\n        <TareaContext.Provider\n            value={{\n                tareas: state.tareas,\n                tareasproyecto: state.tareasproyecto,\n                errortarea: state.errortarea,\n                tareaseleccionada: state.tareaseleccionada,\n                obtenerTareas,\n                agrergarTarea,\n                validarTarea,\n                eliminarTarea,\n                cambiarEstadoTarea,\n                guardarTareaActual,\n                actualizarTarea\n            }}>\n            {props.children}\n        </TareaContext.Provider>\n    )\n}\n\nexport default TareaState;"]},"metadata":{},"sourceType":"module"}