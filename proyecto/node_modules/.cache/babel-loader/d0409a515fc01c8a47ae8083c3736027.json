{"ast":null,"code":"var _jsxFileName = \"/home/freilinjb/Documentos/MEARNTasks/proyecto/src/components/proyectos/NuevoProyecto.jsx\";\nimport React, { Fragment, useState, useContext } from 'react';\nimport proyectoContext from '../../context/proyectos/proyectoContext';\n\nconst NuevoProyecto = () => {\n  //Obtener el state del formulario.\n  //nos permite consumir datos del context sin tener que pasarlo por props\n  // a lo largo del componente (formularioFalse)\n  const proyectosContext = useContext(proyectoContext); //utilizar el formulario del proyectoState\n\n  const {\n    formulario,\n    errorformulario,\n    mostrarFormulario,\n    agrergarProyecto,\n    mostrarError\n  } = proyectosContext; //State para Proyecto\n\n  const [proyecto, setProyecto] = useState({\n    nombre: ''\n  }); //Extrae el nombre del proyecto\n\n  const {\n    nombre\n  } = proyecto; //Lee los contenito del input\n\n  const onChangeProyecto = e => {\n    setProyecto({ ...proyecto,\n      [e.target.name]: e.target.value\n    });\n  }; //Cuando el usuario envia un proyecto\n\n\n  const onSubmitProyecto = e => {\n    e.preventDefault(); ///Validar el Proyecto\n\n    if (nombre.trim() === '') {\n      mostrarError();\n      return;\n    } //agrergar el state \n\n\n    agrergarProyecto(proyecto); //Reinicial el form\n  }; //Mostrar el formulario nuevoProyecto\n\n\n  const onClickFormulario = () => {\n    mostrarFormulario();\n  };\n\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-block btn-primario\",\n    onClick: onClickFormulario,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }, \"Nuevo Proyecto\"), formulario ? /*#__PURE__*/React.createElement(\"form\", {\n    className: \"formulario-nuevo-proyecto\",\n    onSubmit: onSubmitProyecto,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"formulario-nuevo-proyecto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    className: \"input-text\",\n    placeholder: \"Nombre del Proyecto\",\n    name: \"nombre\",\n    value: nombre,\n    onChange: onChangeProyecto,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"submit\",\n    className: \"btn btn-primario btn-block\",\n    value: \"Agregar Proyecto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 21\n    }\n  })) : null, errorformulario ? /*#__PURE__*/React.createElement(\"p\", {\n    className: \"mensaje error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 32\n    }\n  }, \"El nombre del Proyecto es obligatorio\") : null);\n};\n\nexport default NuevoProyecto;","map":{"version":3,"sources":["/home/freilinjb/Documentos/MEARNTasks/proyecto/src/components/proyectos/NuevoProyecto.jsx"],"names":["React","Fragment","useState","useContext","proyectoContext","NuevoProyecto","proyectosContext","formulario","errorformulario","mostrarFormulario","agrergarProyecto","mostrarError","proyecto","setProyecto","nombre","onChangeProyecto","e","target","name","value","onSubmitProyecto","preventDefault","trim","onClickFormulario"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,QAA1B,EAAoCC,UAApC,QAAsD,OAAtD;AACA,OAAOC,eAAP,MAA4B,yCAA5B;;AAEA,MAAMC,aAAa,GAAG,MAAM;AAExB;AACA;AACA;AACA,QAAMC,gBAAgB,GAAGH,UAAU,CAACC,eAAD,CAAnC,CALwB,CAMxB;;AACA,QAAM;AAAEG,IAAAA,UAAF;AAAcC,IAAAA,eAAd;AAA+BC,IAAAA,iBAA/B;AAAkDC,IAAAA,gBAAlD;AAAoEC,IAAAA;AAApE,MAAqFL,gBAA3F,CAPwB,CAUxB;;AACA,QAAM,CAACM,QAAD,EAAWC,WAAX,IAA0BX,QAAQ,CAAC;AACrCY,IAAAA,MAAM,EAAC;AAD8B,GAAD,CAAxC,CAXwB,CAexB;;AACA,QAAM;AAAEA,IAAAA;AAAF,MAAaF,QAAnB,CAhBwB,CAmBxB;;AACA,QAAMG,gBAAgB,GAAEC,CAAC,IAAG;AACxBH,IAAAA,WAAW,CAAC,EACR,GAAGD,QADK;AAER,OAACI,CAAC,CAACC,MAAF,CAASC,IAAV,GAAkBF,CAAC,CAACC,MAAF,CAASE;AAFnB,KAAD,CAAX;AAIH,GALD,CApBwB,CA2BxB;;;AACA,QAAMC,gBAAgB,GAAEJ,CAAC,IAAG;AACxBA,IAAAA,CAAC,CAACK,cAAF,GADwB,CAGxB;;AACA,QAAGP,MAAM,CAACQ,IAAP,OAAkB,EAArB,EAAyB;AACrBX,MAAAA,YAAY;AACZ;AACH,KAPuB,CASxB;;;AACAD,IAAAA,gBAAgB,CAACE,QAAD,CAAhB,CAVwB,CAYxB;AACH,GAbD,CA5BwB,CA2CxB;;;AACA,QAAMW,iBAAiB,GAAG,MAAM;AAC5Bd,IAAAA,iBAAiB;AACpB,GAFD;;AAIA,sBACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA;AACI,IAAA,SAAS,EAAC,4BADd;AAEI,IAAA,OAAO,EAAEc,iBAFb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADA,EAQIhB,UAAU,gBAGN;AAAM,IAAA,SAAS,EAAC,2BAAhB;AAA4C,IAAA,QAAQ,EAAEa,gBAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,2BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AACI,IAAA,IAAI,EAAC,MADT;AAEI,IAAA,SAAS,EAAC,YAFd;AAGI,IAAA,WAAW,EAAC,qBAHhB;AAII,IAAA,IAAI,EAAC,QAJT;AAKI,IAAA,KAAK,EAAEN,MALX;AAMI,IAAA,QAAQ,EAAEC,gBANd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,eAaI;AAAO,IAAA,IAAI,EAAC,QAAZ;AAAqB,IAAA,SAAS,EAAC,4BAA/B;AAA4D,IAAA,KAAK,EAAC,kBAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAbJ,CAHM,GAmBR,IA3BN,EA6BKP,eAAe,gBAAG;AAAG,IAAA,SAAS,EAAC,eAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAAH,GAA4E,IA7BhG,CADJ;AAkCH,CAlFD;;AAoFA,eAAeH,aAAf","sourcesContent":["import React, { Fragment, useState, useContext } from 'react';\nimport proyectoContext from '../../context/proyectos/proyectoContext';\n\nconst NuevoProyecto = () => {\n\n    //Obtener el state del formulario.\n    //nos permite consumir datos del context sin tener que pasarlo por props\n    // a lo largo del componente (formularioFalse)\n    const proyectosContext = useContext(proyectoContext);\n    //utilizar el formulario del proyectoState\n    const { formulario, errorformulario, mostrarFormulario, agrergarProyecto, mostrarError } = proyectosContext;\n\n\n    //State para Proyecto\n    const [proyecto, setProyecto] = useState({\n        nombre:'',\n    });\n\n    //Extrae el nombre del proyecto\n    const { nombre } = proyecto;\n\n\n    //Lee los contenito del input\n    const onChangeProyecto =e=> {\n        setProyecto({\n            ...proyecto,\n            [e.target.name] : e.target.value\n        });\n    }\n\n    //Cuando el usuario envia un proyecto\n    const onSubmitProyecto =e=> {\n        e.preventDefault();\n\n        ///Validar el Proyecto\n        if(nombre.trim() === '') {\n            mostrarError();\n            return;\n        }\n\n        //agrergar el state \n        agrergarProyecto(proyecto);\n\n        //Reinicial el form\n    }\n\n    //Mostrar el formulario nuevoProyecto\n    const onClickFormulario = () => {\n        mostrarFormulario();\n    }\n\n    return ( \n        <Fragment>\n        <button \n            className=\"btn btn-block btn-primario\"\n            onClick={onClickFormulario}        \n            >Nuevo Proyecto</button>\n\n        {\n            \n            formulario\n            ? \n            (\n                <form className=\"formulario-nuevo-proyecto\" onSubmit={onSubmitProyecto}>\n                    <div className=\"formulario-nuevo-proyecto\">\n                        <input \n                            type=\"text\" \n                            className=\"input-text\" \n                            placeholder=\"Nombre del Proyecto\" \n                            name=\"nombre\"\n                            value={nombre} \n                            onChange={onChangeProyecto}\n                            \n                        />\n                    </div>\n\n                    <input type=\"submit\" className=\"btn btn-primario btn-block\" value=\"Agregar Proyecto\"/>\n                </form>\n            )\n            : null }\n\n            {errorformulario ? <p className=\"mensaje error\">El nombre del Proyecto es obligatorio</p> : null}\n        </Fragment>\n\n     );\n}\n \nexport default NuevoProyecto;"]},"metadata":{},"sourceType":"module"}